// Copyright 1998-2017 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "GeneratedCppIncludes.h"
#include "Public/Biosygn.h"
#include "Biosygn.generated.dep.h"
PRAGMA_DISABLE_OPTIMIZATION
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCode1Biosygn() {}
	void UBiosygnBPLibrary::StaticRegisterNativesUBiosygnBPLibrary()
	{
		FNativeFunctionRegistrar::RegisterFunction(UBiosygnBPLibrary::StaticClass(), "GetHeartRate",(Native)&UBiosygnBPLibrary::execGetHeartRate);
		FNativeFunctionRegistrar::RegisterFunction(UBiosygnBPLibrary::StaticClass(), "OpenSession",(Native)&UBiosygnBPLibrary::execOpenSession);
		FNativeFunctionRegistrar::RegisterFunction(UBiosygnBPLibrary::StaticClass(), "SetKey",(Native)&UBiosygnBPLibrary::execSetKey);
		FNativeFunctionRegistrar::RegisterFunction(UBiosygnBPLibrary::StaticClass(), "UploadData",(Native)&UBiosygnBPLibrary::execUploadData);
	}
	IMPLEMENT_CLASS(UBiosygnBPLibrary, 2227202554);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UClass* Z_Construct_UClass_UBlueprintFunctionLibrary();

	BIOSYGN_API class UFunction* Z_Construct_UFunction_UBiosygnBPLibrary_GetHeartRate();
	BIOSYGN_API class UFunction* Z_Construct_UFunction_UBiosygnBPLibrary_OpenSession();
	BIOSYGN_API class UFunction* Z_Construct_UFunction_UBiosygnBPLibrary_SetKey();
	BIOSYGN_API class UFunction* Z_Construct_UFunction_UBiosygnBPLibrary_UploadData();
	BIOSYGN_API class UClass* Z_Construct_UClass_UBiosygnBPLibrary_NoRegister();
	BIOSYGN_API class UClass* Z_Construct_UClass_UBiosygnBPLibrary();
	BIOSYGN_API class UPackage* Z_Construct_UPackage__Script_Biosygn();
	UFunction* Z_Construct_UFunction_UBiosygnBPLibrary_GetHeartRate()
	{
		struct BiosygnBPLibrary_eventGetHeartRate_Parms
		{
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBiosygnBPLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetHeartRate"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(BiosygnBPLibrary_eventGetHeartRate_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, BiosygnBPLibrary_eventGetHeartRate_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Biosygn"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("B - Heart Rate"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Biosygn AR Biometrics Control"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/BiosygnBPLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBiosygnBPLibrary_OpenSession()
	{
		struct BiosygnBPLibrary_eventOpenSession_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBiosygnBPLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OpenSession"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(BiosygnBPLibrary_eventOpenSession_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, BiosygnBPLibrary_eventOpenSession_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, BiosygnBPLibrary_eventOpenSession_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, BiosygnBPLibrary_eventOpenSession_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Biosygn"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("B - OpenSession"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Biosygn AR Biometrics Control"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/BiosygnBPLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBiosygnBPLibrary_SetKey()
	{
		struct BiosygnBPLibrary_eventSetKey_Parms
		{
			FString userKey;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBiosygnBPLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetKey"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(BiosygnBPLibrary_eventSetKey_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, BiosygnBPLibrary_eventSetKey_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, BiosygnBPLibrary_eventSetKey_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, BiosygnBPLibrary_eventSetKey_Parms), sizeof(bool), true);
			UProperty* NewProp_userKey = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("userKey"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(userKey, BiosygnBPLibrary_eventSetKey_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Biosygn"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("B - SetKey"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Biosygn AR Biometrics Control"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/BiosygnBPLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBiosygnBPLibrary_UploadData()
	{
		struct BiosygnBPLibrary_eventUploadData_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBiosygnBPLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("UploadData"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(BiosygnBPLibrary_eventUploadData_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, BiosygnBPLibrary_eventUploadData_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, BiosygnBPLibrary_eventUploadData_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, BiosygnBPLibrary_eventUploadData_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Biosygn"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("B - Upload"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Biosygn AR Biometrics Control"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/BiosygnBPLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UBiosygnBPLibrary_NoRegister()
	{
		return UBiosygnBPLibrary::StaticClass();
	}
	UClass* Z_Construct_UClass_UBiosygnBPLibrary()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBlueprintFunctionLibrary();
			Z_Construct_UPackage__Script_Biosygn();
			OuterClass = UBiosygnBPLibrary::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;

				OuterClass->LinkChild(Z_Construct_UFunction_UBiosygnBPLibrary_GetHeartRate());
				OuterClass->LinkChild(Z_Construct_UFunction_UBiosygnBPLibrary_OpenSession());
				OuterClass->LinkChild(Z_Construct_UFunction_UBiosygnBPLibrary_SetKey());
				OuterClass->LinkChild(Z_Construct_UFunction_UBiosygnBPLibrary_UploadData());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UBiosygnBPLibrary_GetHeartRate(), "GetHeartRate"); // 4027314398
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UBiosygnBPLibrary_OpenSession(), "OpenSession"); // 2556057129
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UBiosygnBPLibrary_SetKey(), "SetKey"); // 1178100560
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UBiosygnBPLibrary_UploadData(), "UploadData"); // 671661001
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BiosygnBPLibrary.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/BiosygnBPLibrary.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("*      Function library class.\n*      Each function in it is expected to be static and represents blueprint node that can be called in any blueprint.\n*\n*      When declaring function you can define metadata for the node. Key function specifiers will be BlueprintPure and BlueprintCallable.\n*      BlueprintPure - means the function does not affect the owning object in any way and thus creates a node without Exec pins.\n*      BlueprintCallable - makes a function which can be executed in Blueprints - Thus it has Exec pins.\n*      DisplayName - full name of the node, shown when you mouse over the node and in the blueprint drop down menu.\n*                              Its lets you name the node using characters not allowed in C++ function names.\n*      CompactNodeTitle - the word(s) that appear on the node.\n*      Keywords -      the list of keywords that helps you to find node when you search for it using Blueprint drop-down menu.\n*                              Good example is \"Print String\" node which you can find also by using keyword \"log\".\n*      Category -      the category your node will be under in the Blueprint drop-down menu.\n*\n*      For more info on custom blueprint nodes visit documentation:\n*      https://wiki.unrealengine.com/Custom_Blueprint_Node_Creation"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBiosygnBPLibrary(Z_Construct_UClass_UBiosygnBPLibrary, &UBiosygnBPLibrary::StaticClass, TEXT("UBiosygnBPLibrary"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBiosygnBPLibrary);
	UPackage* Z_Construct_UPackage__Script_Biosygn()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/Biosygn")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0x2FD2C6FA;
			Guid.B = 0xFD0BA5DF;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
